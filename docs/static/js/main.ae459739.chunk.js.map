{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAjBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAETC,EAFS,iDAEwCC,UAAUH,GAFlD,+DAIII,MAAOF,GAJX,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcRM,GAdQ,kCAgBfO,QAAQC,IAAR,MAhBe,0DAAH,sDCAPC,EAAc,SAAC,GAAqB,EAAnBN,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,sBAAKgB,UAAU,4DAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAKA,QCFJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAhB,GACHc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAGvB,CAACtB,IAEIuB,EDLuBI,CAAa3B,GAA/Ba,EAVyB,EAU9BN,KAAYe,EAVkB,EAUlBA,QAGnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIOL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEzBzBiB,EAAe,WAExB,IAF8B,EAIM1C,mBAFb,IAFO,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAc9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MC1BjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae459739.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault(); //prevenir la recarga del formulario\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = \"text\" \r\n                value = { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs = async( category) => {\r\n    try{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nmuE7k6LPUyorIajgdwbb9y3BwCENYeR`\r\n\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n        const gifs = data.map( img => {\r\n            return{\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n \r\n        return gifs;\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s \">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n/*     const [images, setImages] = useState([]);\r\n       useEffect( () => {\r\n        getGifs(category)\r\n            .then( img => setImages(img));\r\n    }, [category]) //Solo se ejecuta cuando el componente es renderizado por primera vez \r\n*/\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n{            <div className='card-grid'>\r\n            \r\n                \r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    )\r\n                }\r\n                \r\n            </div>}\r\n        </>\r\n    );\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            })\r\n    },[category]);\r\n\r\n    return state; // {data:[],loading: true}\r\n}\r\n","import React,{ useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const categoriesInit = [];\r\n\r\n    const [categories, setCategories] = useState(categoriesInit)\r\n/* \r\n    const handleAdd = () => {\r\n        \r\n        //setCategories([...categories,'HunterXHunter']);\r\n        setCategories(cats => [...cats,'HunterXHunter']);\r\n          <button onClick={handleAdd}>Agregar</button>\r\n          <li key={ category }>{ category }</li>\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n\r\n          \r\n        \r\n            <ol>\r\n                { \r\n                    categories.map(category => \r\n                        \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}